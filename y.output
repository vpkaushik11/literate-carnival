Terminals unused in grammar

    AND
    OR


State 9 conflicts: 1 shift/reduce
State 35 conflicts: 10 shift/reduce
State 88 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 headers: headers headers
    3        | INCLUDE

    4 main: datatype ID

    5 datatype: INT
    6         | FLOAT
    7         | CHAR
    8         | VOID

    9 body: body body

   10 $@1: ε

   11 body: WHILE $@1 '(' condition ')' '{' body '}'

   12 $@2: ε

   13 $@3: ε

   14 $@4: ε

   15 body: IF $@2 '(' condition ')' $@3 '{' body '}' $@4 else
   16     | statement ';'

   17 condition: expression relop expression
   18          | expression
   19          | TRUE
   20          | FALSE
   21          | ε

   22 $@5: ε

   23 statement: datatype ID $@5 init

   24 $@6: ε

   25 statement: ID $@6 '=' expression

   26 $@7: ε

   27 statement: ID $@7 relop expression

   28 $@8: ε

   29 statement: ID $@8 UNARY
   30          | UNARY ID

   31 $@9: ε

   32 statement: PRINTF $@9 '(' STR ')'

   33 $@10: ε

   34 statement: SCANF $@10 '(' STR ',' '&' ID ')'

   35 $@11: ε

   36 else: ELSE $@11 '{' body '}'
   37     | ε

   38 relop: LT
   39      | GT
   40      | LE
   41      | GE
   42      | EQ
   43      | NE

   44 $@12: ε

   45 init: ',' ID $@12 init

   46 $@13: ε

   47 init: '=' value ',' ID $@13 init
   48     | '=' value
   49     | ε

   50 expression: expression arithmetic expression
   51           | value

   52 arithmetic: ADD
   53           | SUB
   54           | MUL
   55           | DIV

   56 value: NUM
   57      | FLOAT_NUM
   58      | CHARACTER
   59      | ID

   60 $@14: ε

   61 return: RETURN $@14 NUM ';'
   62       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 34
    '(' (40) 1 11 15 32 34
    ')' (41) 1 11 15 32 34
    ',' (44) 34 45 47
    ';' (59) 16 61
    '=' (61) 25 47 48
    '{' (123) 1 11 15 36
    '}' (125) 1 11 15 36
    error (256)
    VOID (258) 8
    CHARACTER <node_obj> (259) 58
    PRINTF <node_obj> (260) 32
    SCANF <node_obj> (261) 34
    INT <node_obj> (262) 5
    FLOAT <node_obj> (263) 6
    CHAR <node_obj> (264) 7
    WHILE <node_obj> (265) 11
    IF <node_obj> (266) 15
    ELSE <node_obj> (267) 36
    TRUE <node_obj> (268) 19
    FALSE <node_obj> (269) 20
    NUM <node_obj> (270) 56 61
    FLOAT_NUM <node_obj> (271) 57
    ID <node_obj> (272) 4 23 25 27 29 30 34 45 47 59
    LE <node_obj> (273) 40
    GE <node_obj> (274) 41
    EQ <node_obj> (275) 42
    NE <node_obj> (276) 43
    GT <node_obj> (277) 39
    LT <node_obj> (278) 38
    AND <node_obj> (279)
    OR <node_obj> (280)
    STR <node_obj> (281) 32 34
    ADD <node_obj> (282) 52
    MUL <node_obj> (283) 54
    DIV <node_obj> (284) 55
    SUB <node_obj> (285) 53
    UNARY <node_obj> (286) 29 30
    INCLUDE <node_obj> (287) 3
    RETURN <node_obj> (288) 61


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program <node_obj> (43)
        on left: 1
        on right: 0
    headers <node_obj> (44)
        on left: 2 3
        on right: 1 2
    main <node_obj> (45)
        on left: 4
        on right: 1
    datatype <node_obj> (46)
        on left: 5 6 7 8
        on right: 4 23
    body <node_obj> (47)
        on left: 9 11 15 16
        on right: 1 9 11 15 36
    $@1 (48)
        on left: 10
        on right: 11
    $@2 (49)
        on left: 12
        on right: 15
    $@3 (50)
        on left: 13
        on right: 15
    $@4 (51)
        on left: 14
        on right: 15
    condition <node_obj3> (52)
        on left: 17 18 19 20 21
        on right: 11 15
    statement <node_obj> (53)
        on left: 23 25 27 29 30 32 34
        on right: 16
    $@5 (54)
        on left: 22
        on right: 23
    $@6 (55)
        on left: 24
        on right: 25
    $@7 (56)
        on left: 26
        on right: 27
    $@8 (57)
        on left: 28
        on right: 29
    $@9 (58)
        on left: 31
        on right: 32
    $@10 (59)
        on left: 33
        on right: 34
    else <node_obj> (60)
        on left: 36 37
        on right: 15
    $@11 (61)
        on left: 35
        on right: 36
    relop <node_obj> (62)
        on left: 38 39 40 41 42 43
        on right: 17 27
    init <node_obj2> (63)
        on left: 45 47 48 49
        on right: 23 45 47
    $@12 (64)
        on left: 44
        on right: 45
    $@13 (65)
        on left: 46
        on right: 47
    expression <node_obj2> (66)
        on left: 50 51
        on right: 17 18 25 27 50
    arithmetic <node_obj> (67)
        on left: 52 53 54 55
        on right: 50
    value <node_obj2> (68)
        on left: 56 57 58 59
        on right: 47 48 51
    return <node_obj> (69)
        on left: 61 62
        on right: 1
    $@14 (70)
        on left: 60
        on right: 61


State 0

    0 $accept: • program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE •

    $default  reduce using rule 3 (headers)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: headers • main '(' ')' '{' body return '}'
    2 headers: headers • headers

    VOID     shift, and go to state 5
    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    CHAR     shift, and go to state 8
    INCLUDE  shift, and go to state 1

    headers   go to state 9
    main      go to state 10
    datatype  go to state 11


State 4

    0 $accept: program $end •

    $default  accept


State 5

    8 datatype: VOID •

    $default  reduce using rule 8 (datatype)


State 6

    5 datatype: INT •

    $default  reduce using rule 5 (datatype)


State 7

    6 datatype: FLOAT •

    $default  reduce using rule 6 (datatype)


State 8

    7 datatype: CHAR •

    $default  reduce using rule 7 (datatype)


State 9

    2 headers: headers • headers
    2        | headers headers •

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 9


State 10

    1 program: headers main • '(' ')' '{' body return '}'

    '('  shift, and go to state 12


State 11

    4 main: datatype • ID

    ID  shift, and go to state 13


State 12

    1 program: headers main '(' • ')' '{' body return '}'

    ')'  shift, and go to state 14


State 13

    4 main: datatype ID •

    $default  reduce using rule 4 (main)


State 14

    1 program: headers main '(' ')' • '{' body return '}'

    '{'  shift, and go to state 15


State 15

    1 program: headers main '(' ')' '{' • body return '}'

    VOID    shift, and go to state 5
    PRINTF  shift, and go to state 16
    SCANF   shift, and go to state 17
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    WHILE   shift, and go to state 18
    IF      shift, and go to state 19
    ID      shift, and go to state 20
    UNARY   shift, and go to state 21

    datatype   go to state 22
    body       go to state 23
    statement  go to state 24


State 16

   32 statement: PRINTF • $@9 '(' STR ')'

    $default  reduce using rule 31 ($@9)

    $@9  go to state 25


State 17

   34 statement: SCANF • $@10 '(' STR ',' '&' ID ')'

    $default  reduce using rule 33 ($@10)

    $@10  go to state 26


State 18

   11 body: WHILE • $@1 '(' condition ')' '{' body '}'

    $default  reduce using rule 10 ($@1)

    $@1  go to state 27


State 19

   15 body: IF • $@2 '(' condition ')' $@3 '{' body '}' $@4 else

    $default  reduce using rule 12 ($@2)

    $@2  go to state 28


State 20

   25 statement: ID • $@6 '=' expression
   27          | ID • $@7 relop expression
   29          | ID • $@8 UNARY

    UNARY     reduce using rule 28 ($@8)
    '='       reduce using rule 24 ($@6)
    $default  reduce using rule 26 ($@7)

    $@6  go to state 29
    $@7  go to state 30
    $@8  go to state 31


State 21

   30 statement: UNARY • ID

    ID  shift, and go to state 32


State 22

   23 statement: datatype • ID $@5 init

    ID  shift, and go to state 33


State 23

    1 program: headers main '(' ')' '{' body • return '}'
    9 body: body • body

    VOID    shift, and go to state 5
    PRINTF  shift, and go to state 16
    SCANF   shift, and go to state 17
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    WHILE   shift, and go to state 18
    IF      shift, and go to state 19
    ID      shift, and go to state 20
    UNARY   shift, and go to state 21
    RETURN  shift, and go to state 34

    $default  reduce using rule 62 (return)

    datatype   go to state 22
    body       go to state 35
    statement  go to state 24
    return     go to state 36


State 24

   16 body: statement • ';'

    ';'  shift, and go to state 37


State 25

   32 statement: PRINTF $@9 • '(' STR ')'

    '('  shift, and go to state 38


State 26

   34 statement: SCANF $@10 • '(' STR ',' '&' ID ')'

    '('  shift, and go to state 39


State 27

   11 body: WHILE $@1 • '(' condition ')' '{' body '}'

    '('  shift, and go to state 40


State 28

   15 body: IF $@2 • '(' condition ')' $@3 '{' body '}' $@4 else

    '('  shift, and go to state 41


State 29

   25 statement: ID $@6 • '=' expression

    '='  shift, and go to state 42


State 30

   27 statement: ID $@7 • relop expression

    LE  shift, and go to state 43
    GE  shift, and go to state 44
    EQ  shift, and go to state 45
    NE  shift, and go to state 46
    GT  shift, and go to state 47
    LT  shift, and go to state 48

    relop  go to state 49


State 31

   29 statement: ID $@8 • UNARY

    UNARY  shift, and go to state 50


State 32

   30 statement: UNARY ID •

    $default  reduce using rule 30 (statement)


State 33

   23 statement: datatype ID • $@5 init

    $default  reduce using rule 22 ($@5)

    $@5  go to state 51


State 34

   61 return: RETURN • $@14 NUM ';'

    $default  reduce using rule 60 ($@14)

    $@14  go to state 52


State 35

    9 body: body • body
    9     | body body •

    VOID    shift, and go to state 5
    PRINTF  shift, and go to state 16
    SCANF   shift, and go to state 17
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    WHILE   shift, and go to state 18
    IF      shift, and go to state 19
    ID      shift, and go to state 20
    UNARY   shift, and go to state 21

    VOID      [reduce using rule 9 (body)]
    PRINTF    [reduce using rule 9 (body)]
    SCANF     [reduce using rule 9 (body)]
    INT       [reduce using rule 9 (body)]
    FLOAT     [reduce using rule 9 (body)]
    CHAR      [reduce using rule 9 (body)]
    WHILE     [reduce using rule 9 (body)]
    IF        [reduce using rule 9 (body)]
    ID        [reduce using rule 9 (body)]
    UNARY     [reduce using rule 9 (body)]
    $default  reduce using rule 9 (body)

    datatype   go to state 22
    body       go to state 35
    statement  go to state 24


State 36

    1 program: headers main '(' ')' '{' body return • '}'

    '}'  shift, and go to state 53


State 37

   16 body: statement ';' •

    $default  reduce using rule 16 (body)


State 38

   32 statement: PRINTF $@9 '(' • STR ')'

    STR  shift, and go to state 54


State 39

   34 statement: SCANF $@10 '(' • STR ',' '&' ID ')'

    STR  shift, and go to state 55


State 40

   11 body: WHILE $@1 '(' • condition ')' '{' body '}'

    CHARACTER  shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NUM        shift, and go to state 59
    FLOAT_NUM  shift, and go to state 60
    ID         shift, and go to state 61

    $default  reduce using rule 21 (condition)

    condition   go to state 62
    expression  go to state 63
    value       go to state 64


State 41

   15 body: IF $@2 '(' • condition ')' $@3 '{' body '}' $@4 else

    CHARACTER  shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NUM        shift, and go to state 59
    FLOAT_NUM  shift, and go to state 60
    ID         shift, and go to state 61

    $default  reduce using rule 21 (condition)

    condition   go to state 65
    expression  go to state 63
    value       go to state 64


State 42

   25 statement: ID $@6 '=' • expression

    CHARACTER  shift, and go to state 56
    NUM        shift, and go to state 59
    FLOAT_NUM  shift, and go to state 60
    ID         shift, and go to state 61

    expression  go to state 66
    value       go to state 64


State 43

   40 relop: LE •

    $default  reduce using rule 40 (relop)


State 44

   41 relop: GE •

    $default  reduce using rule 41 (relop)


State 45

   42 relop: EQ •

    $default  reduce using rule 42 (relop)


State 46

   43 relop: NE •

    $default  reduce using rule 43 (relop)


State 47

   39 relop: GT •

    $default  reduce using rule 39 (relop)


State 48

   38 relop: LT •

    $default  reduce using rule 38 (relop)


State 49

   27 statement: ID $@7 relop • expression

    CHARACTER  shift, and go to state 56
    NUM        shift, and go to state 59
    FLOAT_NUM  shift, and go to state 60
    ID         shift, and go to state 61

    expression  go to state 67
    value       go to state 64


State 50

   29 statement: ID $@8 UNARY •

    $default  reduce using rule 29 (statement)


State 51

   23 statement: datatype ID $@5 • init

    '='  shift, and go to state 68
    ','  shift, and go to state 69

    $default  reduce using rule 49 (init)

    init  go to state 70


State 52

   61 return: RETURN $@14 • NUM ';'

    NUM  shift, and go to state 71


State 53

    1 program: headers main '(' ')' '{' body return '}' •

    $default  reduce using rule 1 (program)


State 54

   32 statement: PRINTF $@9 '(' STR • ')'

    ')'  shift, and go to state 72


State 55

   34 statement: SCANF $@10 '(' STR • ',' '&' ID ')'

    ','  shift, and go to state 73


State 56

   58 value: CHARACTER •

    $default  reduce using rule 58 (value)


State 57

   19 condition: TRUE •

    $default  reduce using rule 19 (condition)


State 58

   20 condition: FALSE •

    $default  reduce using rule 20 (condition)


State 59

   56 value: NUM •

    $default  reduce using rule 56 (value)


State 60

   57 value: FLOAT_NUM •

    $default  reduce using rule 57 (value)


State 61

   59 value: ID •

    $default  reduce using rule 59 (value)


State 62

   11 body: WHILE $@1 '(' condition • ')' '{' body '}'

    ')'  shift, and go to state 74


State 63

   17 condition: expression • relop expression
   18          | expression •
   50 expression: expression • arithmetic expression

    LE   shift, and go to state 43
    GE   shift, and go to state 44
    EQ   shift, and go to state 45
    NE   shift, and go to state 46
    GT   shift, and go to state 47
    LT   shift, and go to state 48
    ADD  shift, and go to state 75
    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 18 (condition)

    relop       go to state 79
    arithmetic  go to state 80


State 64

   51 expression: value •

    $default  reduce using rule 51 (expression)


State 65

   15 body: IF $@2 '(' condition • ')' $@3 '{' body '}' $@4 else

    ')'  shift, and go to state 81


State 66

   25 statement: ID $@6 '=' expression •
   50 expression: expression • arithmetic expression

    ADD  shift, and go to state 75
    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 25 (statement)

    arithmetic  go to state 80


State 67

   27 statement: ID $@7 relop expression •
   50 expression: expression • arithmetic expression

    ADD  shift, and go to state 75
    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 27 (statement)

    arithmetic  go to state 80


State 68

   47 init: '=' • value ',' ID $@13 init
   48     | '=' • value

    CHARACTER  shift, and go to state 56
    NUM        shift, and go to state 59
    FLOAT_NUM  shift, and go to state 60
    ID         shift, and go to state 61

    value  go to state 82


State 69

   45 init: ',' • ID $@12 init

    ID  shift, and go to state 83


State 70

   23 statement: datatype ID $@5 init •

    $default  reduce using rule 23 (statement)


State 71

   61 return: RETURN $@14 NUM • ';'

    ';'  shift, and go to state 84


State 72

   32 statement: PRINTF $@9 '(' STR ')' •

    $default  reduce using rule 32 (statement)


State 73

   34 statement: SCANF $@10 '(' STR ',' • '&' ID ')'

    '&'  shift, and go to state 85


State 74

   11 body: WHILE $@1 '(' condition ')' • '{' body '}'

    '{'  shift, and go to state 86


State 75

   52 arithmetic: ADD •

    $default  reduce using rule 52 (arithmetic)


State 76

   54 arithmetic: MUL •

    $default  reduce using rule 54 (arithmetic)


State 77

   55 arithmetic: DIV •

    $default  reduce using rule 55 (arithmetic)


State 78

   53 arithmetic: SUB •

    $default  reduce using rule 53 (arithmetic)


State 79

   17 condition: expression relop • expression

    CHARACTER  shift, and go to state 56
    NUM        shift, and go to state 59
    FLOAT_NUM  shift, and go to state 60
    ID         shift, and go to state 61

    expression  go to state 87
    value       go to state 64


State 80

   50 expression: expression arithmetic • expression

    CHARACTER  shift, and go to state 56
    NUM        shift, and go to state 59
    FLOAT_NUM  shift, and go to state 60
    ID         shift, and go to state 61

    expression  go to state 88
    value       go to state 64


State 81

   15 body: IF $@2 '(' condition ')' • $@3 '{' body '}' $@4 else

    $default  reduce using rule 13 ($@3)

    $@3  go to state 89


State 82

   47 init: '=' value • ',' ID $@13 init
   48     | '=' value •

    ','  shift, and go to state 90

    $default  reduce using rule 48 (init)


State 83

   45 init: ',' ID • $@12 init

    $default  reduce using rule 44 ($@12)

    $@12  go to state 91


State 84

   61 return: RETURN $@14 NUM ';' •

    $default  reduce using rule 61 (return)


State 85

   34 statement: SCANF $@10 '(' STR ',' '&' • ID ')'

    ID  shift, and go to state 92


State 86

   11 body: WHILE $@1 '(' condition ')' '{' • body '}'

    VOID    shift, and go to state 5
    PRINTF  shift, and go to state 16
    SCANF   shift, and go to state 17
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    WHILE   shift, and go to state 18
    IF      shift, and go to state 19
    ID      shift, and go to state 20
    UNARY   shift, and go to state 21

    datatype   go to state 22
    body       go to state 93
    statement  go to state 24


State 87

   17 condition: expression relop expression •
   50 expression: expression • arithmetic expression

    ADD  shift, and go to state 75
    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 17 (condition)

    arithmetic  go to state 80


State 88

   50 expression: expression • arithmetic expression
   50           | expression arithmetic expression •

    ADD  shift, and go to state 75
    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    SUB  shift, and go to state 78

    ADD       [reduce using rule 50 (expression)]
    MUL       [reduce using rule 50 (expression)]
    DIV       [reduce using rule 50 (expression)]
    SUB       [reduce using rule 50 (expression)]
    $default  reduce using rule 50 (expression)

    arithmetic  go to state 80


State 89

   15 body: IF $@2 '(' condition ')' $@3 • '{' body '}' $@4 else

    '{'  shift, and go to state 94


State 90

   47 init: '=' value ',' • ID $@13 init

    ID  shift, and go to state 95


State 91

   45 init: ',' ID $@12 • init

    '='  shift, and go to state 68
    ','  shift, and go to state 69

    $default  reduce using rule 49 (init)

    init  go to state 96


State 92

   34 statement: SCANF $@10 '(' STR ',' '&' ID • ')'

    ')'  shift, and go to state 97


State 93

    9 body: body • body
   11     | WHILE $@1 '(' condition ')' '{' body • '}'

    VOID    shift, and go to state 5
    PRINTF  shift, and go to state 16
    SCANF   shift, and go to state 17
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    WHILE   shift, and go to state 18
    IF      shift, and go to state 19
    ID      shift, and go to state 20
    UNARY   shift, and go to state 21
    '}'     shift, and go to state 98

    datatype   go to state 22
    body       go to state 35
    statement  go to state 24


State 94

   15 body: IF $@2 '(' condition ')' $@3 '{' • body '}' $@4 else

    VOID    shift, and go to state 5
    PRINTF  shift, and go to state 16
    SCANF   shift, and go to state 17
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    WHILE   shift, and go to state 18
    IF      shift, and go to state 19
    ID      shift, and go to state 20
    UNARY   shift, and go to state 21

    datatype   go to state 22
    body       go to state 99
    statement  go to state 24


State 95

   47 init: '=' value ',' ID • $@13 init

    $default  reduce using rule 46 ($@13)

    $@13  go to state 100


State 96

   45 init: ',' ID $@12 init •

    $default  reduce using rule 45 (init)


State 97

   34 statement: SCANF $@10 '(' STR ',' '&' ID ')' •

    $default  reduce using rule 34 (statement)


State 98

   11 body: WHILE $@1 '(' condition ')' '{' body '}' •

    $default  reduce using rule 11 (body)


State 99

    9 body: body • body
   15     | IF $@2 '(' condition ')' $@3 '{' body • '}' $@4 else

    VOID    shift, and go to state 5
    PRINTF  shift, and go to state 16
    SCANF   shift, and go to state 17
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    WHILE   shift, and go to state 18
    IF      shift, and go to state 19
    ID      shift, and go to state 20
    UNARY   shift, and go to state 21
    '}'     shift, and go to state 101

    datatype   go to state 22
    body       go to state 35
    statement  go to state 24


State 100

   47 init: '=' value ',' ID $@13 • init

    '='  shift, and go to state 68
    ','  shift, and go to state 69

    $default  reduce using rule 49 (init)

    init  go to state 102


State 101

   15 body: IF $@2 '(' condition ')' $@3 '{' body '}' • $@4 else

    $default  reduce using rule 14 ($@4)

    $@4  go to state 103


State 102

   47 init: '=' value ',' ID $@13 init •

    $default  reduce using rule 47 (init)


State 103

   15 body: IF $@2 '(' condition ')' $@3 '{' body '}' $@4 • else

    ELSE  shift, and go to state 104

    $default  reduce using rule 37 (else)

    else  go to state 105


State 104

   36 else: ELSE • $@11 '{' body '}'

    $default  reduce using rule 35 ($@11)

    $@11  go to state 106


State 105

   15 body: IF $@2 '(' condition ')' $@3 '{' body '}' $@4 else •

    $default  reduce using rule 15 (body)


State 106

   36 else: ELSE $@11 • '{' body '}'

    '{'  shift, and go to state 107


State 107

   36 else: ELSE $@11 '{' • body '}'

    VOID    shift, and go to state 5
    PRINTF  shift, and go to state 16
    SCANF   shift, and go to state 17
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    WHILE   shift, and go to state 18
    IF      shift, and go to state 19
    ID      shift, and go to state 20
    UNARY   shift, and go to state 21

    datatype   go to state 22
    body       go to state 108
    statement  go to state 24


State 108

    9 body: body • body
   36 else: ELSE $@11 '{' body • '}'

    VOID    shift, and go to state 5
    PRINTF  shift, and go to state 16
    SCANF   shift, and go to state 17
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    WHILE   shift, and go to state 18
    IF      shift, and go to state 19
    ID      shift, and go to state 20
    UNARY   shift, and go to state 21
    '}'     shift, and go to state 109

    datatype   go to state 22
    body       go to state 35
    statement  go to state 24


State 109

   36 else: ELSE $@11 '{' body '}' •

    $default  reduce using rule 36 (else)
